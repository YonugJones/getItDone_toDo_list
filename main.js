/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_domManipulation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/domManipulation */ \"./src/modules/domManipulation.js\");\n/* harmony import */ var _modules_localStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/localStorage */ \"./src/modules/localStorage.js\");\n\n\n\n(0,_modules_domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderLayout)(); \n\n\n//\n// WIPE LOCAL STORAGE BELOW //\n//\n\n// removeFromLocalStorage('taskLibrary');\n// removeFromLocalStorage('projectLibrary');\n\n\n\n//# sourceURL=webpack://getitdone_todo_list/./src/index.js?");

/***/ }),

/***/ "./src/modules/domManipulation.js":
/*!****************************************!*\
  !*** ./src/modules/domManipulation.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderAllTasks: () => (/* binding */ renderAllTasks),\n/* harmony export */   renderCreateProjectForm: () => (/* binding */ renderCreateProjectForm),\n/* harmony export */   renderCreateTaskForm: () => (/* binding */ renderCreateTaskForm),\n/* harmony export */   renderLayout: () => (/* binding */ renderLayout),\n/* harmony export */   renderProjectDetails: () => (/* binding */ renderProjectDetails),\n/* harmony export */   renderProjectListDisplay: () => (/* binding */ renderProjectListDisplay)\n/* harmony export */ });\n/* harmony import */ var _projects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projects */ \"./src/modules/projects.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tasks */ \"./src/modules/tasks.js\");\n/* harmony import */ var _userInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./userInterface */ \"./src/modules/userInterface.js\");\n\n\n\n\nfunction renderProjectListDisplay() {\n    console.log('renderProjectListDisplay called');\n    //\n    const projectList = document.getElementById('project-list');\n    projectList.textContent = '';\n\n    _projects__WEBPACK_IMPORTED_MODULE_0__.projectLibrary.forEach(proj => {\n        const projectListItem = document.createElement('li');\n        projectListItem.classList.add('project-list-item')\n        projectListItem.textContent = proj.name;\n        projectListItem.setAttribute('data-project-id', proj.id);\n        projectList.appendChild(projectListItem);\n    })\n}\n\nfunction renderCreateProjectForm() {\n    console.log('renderCreateProjectForm called');\n    //\n    const layoutSection = document.getElementById('layout-section');\n    layoutSection.textContent = '';\n\n    const projectForm = document.createElement('form');\n    projectForm.setAttribute('id', 'create-project-form');\n\n    const projectFormFieldset = document.createElement('fieldset');\n    projectFormFieldset.setAttribute('id', 'create-project-fieldset');\n\n    const legend = document.createElement('legend');\n    legend.textContent = 'Create Project:';\n\n    const projectNamelabel = document.createElement('label');\n    projectNamelabel.setAttribute('for', 'pname');\n    projectNamelabel.textContent = 'Project Name:';\n\n    const projectNameInput = document.createElement('input');\n    projectNameInput.setAttribute('type', 'text');\n    projectNameInput.setAttribute('id', 'pname');\n    projectNameInput.setAttribute('name', 'pname');\n\n    const projectDescriptionLabel = document.createElement('label');\n    projectDescriptionLabel.setAttribute('for', 'pdescription');\n    projectDescriptionLabel.textContent = 'Project Description:';\n\n    const projectDescriptionTextArea = document.createElement('textarea');\n    projectDescriptionTextArea.setAttribute('name', 'pdescription');\n    projectDescriptionTextArea.setAttribute('id', 'pdescription');\n    projectDescriptionTextArea.setAttribute('rows', '3');\n\n    const projectDueDateLabel = document.createElement('label');\n    projectDueDateLabel.setAttribute('for', 'pduedate');\n    projectDueDateLabel.textContent = 'Project Due Date:';\n\n    const projectDueDateInput = document.createElement('input');\n    projectDueDateInput.setAttribute('type', 'date');\n    projectDueDateInput.setAttribute('id', 'pduedate');\n    projectDueDateInput.setAttribute('name', 'pduedate');\n\n    const buttonFieldset = document.createElement('fieldset');\n    buttonFieldset.setAttribute('id', 'create-project-buttons');\n\n    const cancelButton = document.createElement('button');\n    cancelButton.setAttribute('type', 'button');\n    cancelButton.setAttribute('id', 'create-project-cancel-button');\n    cancelButton.textContent = 'Cancel';\n\n    const submitButton = document.createElement('button');\n    submitButton.setAttribute('type', 'button');\n    submitButton.setAttribute('id', 'create-project-submit-button');\n    submitButton.textContent = 'Submit';\n\n    projectFormFieldset.appendChild(legend);\n    projectFormFieldset.appendChild(projectNamelabel);\n    projectFormFieldset.appendChild(projectNameInput);\n    projectFormFieldset.appendChild(projectDescriptionLabel);\n    projectFormFieldset.appendChild(projectDescriptionTextArea);\n    projectFormFieldset.appendChild(projectDueDateLabel);\n    projectFormFieldset.appendChild(projectDueDateInput);\n\n    buttonFieldset.appendChild(cancelButton);\n    buttonFieldset.appendChild(submitButton);\n\n    projectForm.appendChild(projectFormFieldset);\n    projectForm.appendChild(buttonFieldset);\n\n    layoutSection.appendChild(projectForm);\n\n    (0,_userInterface__WEBPACK_IMPORTED_MODULE_2__.assignHandler)();\n}\n\nfunction renderCreateTaskForm() {\n    console.log('renderCreateTaskForm called');\n    //\n    const addTaskSection = document.querySelector('.add-task-section');\n\n    const addTaskButton = document.getElementById('add-task-button');\n    addTaskButton.style.display = 'none';\n\n    const taskForm = document.createElement('form');\n    taskForm.setAttribute('id', 'create-task-form');\n\n    const taskFormFieldset = document.createElement('fieldset');\n    taskFormFieldset.setAttribute('id', 'create-task-fieldset');\n\n    const legend = document.createElement('legend');\n    legend.textContent = 'Create Task:';\n\n    const tasktNamelabel = document.createElement('label');\n    tasktNamelabel.setAttribute('for', 'tname');\n    tasktNamelabel.textContent = 'Task Name:';\n\n    const taskNameInput = document.createElement('input');\n    taskNameInput.setAttribute('type', 'text');\n    taskNameInput.setAttribute('id', 'tname');\n    taskNameInput.setAttribute('name', 'tname');\n\n    const taskDueDateLabel = document.createElement('label');\n    taskDueDateLabel.setAttribute('for', 'tduedate');\n    taskDueDateLabel.textContent = 'Task Due Date:';\n\n    const taskDueDateInput = document.createElement('input');\n    taskDueDateInput.setAttribute('type', 'date');\n    taskDueDateInput.setAttribute('id', 'tduedate');\n    taskDueDateInput.setAttribute('name', 'tduedate');\n\n    const taskPriorityLabel = document.createElement('label');\n    taskPriorityLabel.setAttribute('for', 'tpriority');\n    taskPriorityLabel.textContent = 'Task Priority:';\n\n    const taskPrioritySelect = document.createElement('select');\n    taskPrioritySelect.setAttribute('id', 'tpriority');\n    taskPrioritySelect.setAttribute('name', 'tpriority');\n\n    const taskPriorityHigh = document.createElement('option');\n    taskPriorityHigh.setAttribute('value', 'High');\n    taskPriorityHigh.textContent = 'High';\n\n    const taskPriorityMedium = document.createElement('option');\n    taskPriorityMedium.setAttribute('value', 'Medium');\n    taskPriorityMedium.textContent = 'Medium';\n\n    const taskPriorityLow = document.createElement('option');\n    taskPriorityLow.setAttribute('value', 'Low');\n    taskPriorityLow.textContent = 'Low';\n\n    const buttonFieldset = document.createElement('fieldset');\n    buttonFieldset.setAttribute('id', 'create-task-buttons');\n\n    const cancelButton = document.createElement('button');\n    cancelButton.setAttribute('type', 'button');\n    cancelButton.setAttribute('id', 'create-task-cancel-button');\n    cancelButton.textContent = 'Cancel';\n\n    const submitButton = document.createElement('button');\n    submitButton.setAttribute('type', 'button');\n    submitButton.setAttribute('id', 'create-task-submit-button');\n    submitButton.textContent = 'Submit';\n\n    taskFormFieldset.appendChild(legend);\n    taskFormFieldset.appendChild(tasktNamelabel);\n    taskFormFieldset.appendChild(taskNameInput);\n    taskFormFieldset.appendChild(taskPriorityLabel);\n    taskFormFieldset.appendChild(taskPrioritySelect);\n    taskFormFieldset.appendChild(taskDueDateLabel);\n    taskFormFieldset.appendChild(taskDueDateInput);\n\n    taskPrioritySelect.appendChild(taskPriorityHigh);\n    taskPrioritySelect.appendChild(taskPriorityMedium);\n    taskPrioritySelect.appendChild(taskPriorityLow);\n\n    buttonFieldset.appendChild(cancelButton);\n    buttonFieldset.appendChild(submitButton);\n\n    taskForm.appendChild(taskFormFieldset);\n    taskForm.appendChild(buttonFieldset);\n\n    addTaskSection.appendChild(taskForm);\n\n    (0,_userInterface__WEBPACK_IMPORTED_MODULE_2__.assignHandler)();\n}\n\nfunction renderProjectDetails(project) {\n    console.log('renderProjectDetails called');\n\n    const layoutSection = document.getElementById('layout-section');\n    layoutSection.textContent = '';\n\n    const projectDetails = document.createElement('div');\n    projectDetails.classList.add('project-details');\n\n    const projectHeader = document.createElement('div');\n    projectHeader.classList.add('project-details-header');\n\n    const projectName = document.createElement('h2');\n    projectName.textContent = project.name;\n    projectName.classList.add('project-details-name');\n    projectName.setAttribute('data-project-id', project.id);\n\n    const projectButtons = document.createElement('div');\n    projectButtons.classList.add('project-details-buttons');\n\n    const projectDelete = document.createElement('button');\n    projectDelete.setAttribute('type', 'button');\n    projectDelete.classList.add('project-delete-button');\n    projectDelete.textContent = 'DELETE';\n\n    const projectDescription = document.createElement('p');\n    projectDescription.textContent = project.description;\n    projectDescription.classList.add('project-details-description');\n\n    const projectDueDate = document.createElement('p');\n    projectDueDate.textContent = `Due date: ${project.dueDate}`;\n    projectDueDate.classList.add('project-details-due-date');\n\n    const taskList = document.createElement('ul');\n    taskList.classList.add('project-details-task-list');\n\n    project.tasks.forEach(task => {\n        const taskItem = document.createElement('li');\n        taskItem.classList.add('project-details-task-item');\n        taskItem.setAttribute('data-task-id', task.id);\n\n        const taskItemInfo = document.createElement('div');\n        taskItemInfo.classList.add('task-item-info');\n\n        const taskItemButtons = document.createElement('div');\n        taskItemButtons.classList.add('task-item-buttons');\n\n        const taskItemName = document.createElement('div');\n        taskItemName.textContent = task.name;\n        taskItemName.classList.add('task-item-name');\n\n        const taskItemPriority = document.createElement('div');\n        taskItemPriority.textContent = task.priority;\n        taskItemPriority.classList.add('task-item-priority');\n\n        const taskItemDueDate = document.createElement('div');\n        taskItemDueDate.textContent = task.dueDate;\n        taskItemDueDate.classList.add('task-item-duedate');\n\n        const taskItemDelete = document.createElement('button');\n        taskItemDelete.setAttribute('type', 'button');\n        taskItemDelete.setAttribute('class', 'task-item-delete');\n        taskItemDelete.textContent = 'DELETE';\n\n        taskItemInfo.appendChild(taskItemName);\n        taskItemInfo.appendChild(taskItemDueDate);\n        taskItemInfo.appendChild(taskItemPriority);\n\n        taskItemButtons.appendChild(taskItemDelete);\n\n        taskItem.appendChild(taskItemInfo);\n        taskItem.appendChild(taskItemButtons);\n\n        taskList.appendChild(taskItem);\n    });\n\n    const addTaskSection = document.createElement('div');\n    addTaskSection.classList.add('add-task-section');\n\n    const addTaskButton = document.createElement('button');\n    addTaskButton.setAttribute('id', 'add-task-button');\n    addTaskButton.textContent = 'Add Task';\n    addTaskButton.addEventListener('click', renderCreateTaskForm);\n\n    projectButtons.appendChild(projectDelete);\n\n    projectHeader.appendChild(projectName);\n    projectHeader.appendChild(projectButtons);\n\n    projectDetails.appendChild(projectHeader);\n    projectDetails.appendChild(projectDescription);\n\n    projectDetails.appendChild(projectDueDate);\n    if (projectDueDate.textContent = 'Due Date: ') {\n        projectDetails.removeChild(projectDueDate)\n    }\n\n    addTaskSection.appendChild(addTaskButton);\n    \n    projectDetails.appendChild(taskList);\n    projectDetails.appendChild(addTaskSection)\n    \n\n    layoutSection.appendChild(projectDetails);\n\n    (0,_userInterface__WEBPACK_IMPORTED_MODULE_2__.assignHandler)();\n}\n\nfunction renderAllTasks() {\n    console.log('renderAllTasks called');\n    //\n    const layoutSection = document.getElementById('layout-section');\n    layoutSection.textContent = '';\n\n    if (_tasks__WEBPACK_IMPORTED_MODULE_1__.taskLibrary.length === 0) {\n        const noTasksDiv = document.createElement('div');\n        noTasksDiv.classList.add('no-tasks-display');\n\n        const noTasks = document.createElement('h2');\n        noTasks.textContent = 'There are no tasks';\n\n        noTasksDiv.appendChild(noTasks);\n        layoutSection.appendChild(noTasksDiv);\n\n    } else {\n        const allTasksSection = document.createElement('div');\n        allTasksSection.classList.add('all-tasks-section');\n\n        const allTasksHeader = document.createElement('div');\n        allTasksHeader.classList.add('all-tasks-header');\n\n        const allTasksName = document.createElement('h2');\n        allTasksName.classList.add('all-tasks-name');\n        allTasksName.textContent = 'All Tasks';\n        \n        const taskList = document.createElement('ul');\n        taskList.classList.add('project-details-task-list');\n\n        const allTasksButtons = document.createElement('div');\n        allTasksButtons.classList.add('all-tasks-buttons');\n\n        const allTasksDelete = document.createElement('button');\n        allTasksDelete.setAttribute('type', 'button');\n        allTasksDelete.classList.add('all-tasks-delete');\n        allTasksDelete.textContent = 'DELETE';\n\n        _tasks__WEBPACK_IMPORTED_MODULE_1__.taskLibrary.forEach(task => {\n            const taskItem = document.createElement('li');\n            taskItem.classList.add('project-details-task-item');\n            taskItem.setAttribute('data-task-id', task.id);\n\n            const taskItemInfo = document.createElement('div');\n            taskItemInfo.classList.add('task-item-info');\n\n            const taskItemButtons = document.createElement('div');\n            taskItemButtons.classList.add('task-item-buttons');\n\n            const taskItemName = document.createElement('div');\n            taskItemName.textContent = task.name;\n            taskItemName.classList.add('task-item-name');\n\n            const taskItemPriority = document.createElement('div');\n            taskItemPriority.textContent = task.priority;\n            taskItemPriority.classList.add('task-item-priority');\n\n            const taskItemDueDate = document.createElement('div');\n            taskItemDueDate.textContent = task.dueDate;\n            taskItemDueDate.classList.add('task-item-duedate');\n\n            const taskItemDelete = document.createElement('button');\n            taskItemDelete.setAttribute('type', 'button');\n            taskItemDelete.setAttribute('class', 'task-item-delete');\n            taskItemDelete.textContent = 'DELETE';\n\n            taskItemInfo.appendChild(taskItemName);\n            taskItemInfo.appendChild(taskItemDueDate);\n            taskItemInfo.appendChild(taskItemPriority);\n\n            taskItemButtons.appendChild(taskItemDelete);\n\n            taskItem.appendChild(taskItemInfo);\n            taskItem.appendChild(taskItemButtons);\n\n            taskList.appendChild(taskItem);\n        });\n        allTasksButtons.appendChild(allTasksDelete);\n\n        allTasksHeader.appendChild(allTasksName);\n        allTasksHeader.appendChild(allTasksButtons);\n\n        allTasksSection.appendChild(allTasksHeader);\n        allTasksSection.appendChild(taskList);\n\n        layoutSection.appendChild(allTasksSection);\n    }\n    (0,_userInterface__WEBPACK_IMPORTED_MODULE_2__.assignHandler)();\n}\n\n// export function renderHighPriorityTasks() {\n//     console.log('renderHighPriorityTasks called');\n//     //\n//     const layoutSection = document.getElementById('layout-section');\n//     layoutSection.textContent = '';\n\n//     const highPriorityTasks = taskLibrary.filter(task => task.priority === 'HIGH');\n//     console.log(highPriorityTasks);\n\n// }\n\n// export function showProjectLibrary() {\n//     console.log('projectLibrary called', projectLibrary);\n// }\n\n// export function showTaskLibrary() {\n//     console.log('taskLibrary called', taskLibrary);\n// }\n\nfunction renderLayout() {\n    renderProjectListDisplay();\n    (0,_userInterface__WEBPACK_IMPORTED_MODULE_2__.assignHandler)();\n}\n\n//# sourceURL=webpack://getitdone_todo_list/./src/modules/domManipulation.js?");

/***/ }),

/***/ "./src/modules/localStorage.js":
/*!*************************************!*\
  !*** ./src/modules/localStorage.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFromLocalStorage: () => (/* binding */ getFromLocalStorage),\n/* harmony export */   removeFromLocalStorage: () => (/* binding */ removeFromLocalStorage),\n/* harmony export */   saveToLocalStorage: () => (/* binding */ saveToLocalStorage)\n/* harmony export */ });\nfunction saveToLocalStorage(key, data) {\n    console.log('saveToLocalStorage called');\n    //\n    localStorage.setItem(key, JSON.stringify(data));\n}\n\nfunction getFromLocalStorage(key) {\n    console.log('getFromLocalStorage called');\n    //\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : null;\n}\n\nfunction removeFromLocalStorage(key) {\n    console.log('removeFromLocalStorage called');\n    //\n    localStorage.removeItem(key);\n}\n\n\n\n//# sourceURL=webpack://getitdone_todo_list/./src/modules/localStorage.js?");

/***/ }),

/***/ "./src/modules/projects.js":
/*!*********************************!*\
  !*** ./src/modules/projects.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Project: () => (/* binding */ Project),\n/* harmony export */   findProjectById: () => (/* binding */ findProjectById),\n/* harmony export */   generateUniqueId: () => (/* binding */ generateUniqueId),\n/* harmony export */   projectLibrary: () => (/* binding */ projectLibrary),\n/* harmony export */   removeFromProjectLibrary: () => (/* binding */ removeFromProjectLibrary),\n/* harmony export */   removeTaskFromProject: () => (/* binding */ removeTaskFromProject)\n/* harmony export */ });\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localStorage */ \"./src/modules/localStorage.js\");\n\n\nconst projectLibrary = (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('projectLibrary') || [];\n\nfunction generateUniqueId() {\n    console.log('generateUniqueId called');\n    return '_' + Math.random().toString(36).substring(2, 9);\n}\n\nfunction findProjectById(projectId) {\n    console.log('findProjectById called');\n    return projectLibrary.find(proj => proj.id === projectId);\n}\n\nfunction removeFromProjectLibrary(projectId) {\n    console.log('removeFromProjectLibrary called');\n    const projectIndex = projectLibrary.findIndex(proj => proj.id === projectId);\n    projectLibrary.splice(projectIndex, 1);\n    (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage)('projectLibrary', projectLibrary);\n}\n\nfunction removeTaskFromProject(task) {\n    // logic for removing task from selected project's tasks array\n}\n\nfunction Project(name, description, dueDate) {\n    this.id = generateUniqueId();\n    this.name = name,\n    this.description = description,\n    this.dueDate = dueDate,\n    this.tasks = []\n    \n    this.addToProjectLibrary = function() {\n        console.log('addToProjectLibrary called');\n        projectLibrary.push(this);\n        (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage)('projectLibrary', projectLibrary);\n    }\n\n    this.complete = false;\n\n    this.markAsComplete = function() {\n        console.log('markAsComplete project called');\n        this.complete = true;\n    };\n\n    this.markAsIncomplete = function() {\n        console.log('markAsComplete project called');\n        this.complete = false;\n    }\n}\n\n//# sourceURL=webpack://getitdone_todo_list/./src/modules/projects.js?");

/***/ }),

/***/ "./src/modules/tasks.js":
/*!******************************!*\
  !*** ./src/modules/tasks.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Task: () => (/* binding */ Task),\n/* harmony export */   findTaskById: () => (/* binding */ findTaskById),\n/* harmony export */   generateUniqueId: () => (/* binding */ generateUniqueId),\n/* harmony export */   removeFromTaskLibrary: () => (/* binding */ removeFromTaskLibrary),\n/* harmony export */   taskLibrary: () => (/* binding */ taskLibrary)\n/* harmony export */ });\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localStorage */ \"./src/modules/localStorage.js\");\n\n\nconst taskLibrary = (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('taskLibrary') || [];\n\nfunction generateUniqueId() {\n    console.log('generateUniqueId called');\n    return '_' + Math.random().toString(36).substring(2, 9);\n}\n\nfunction findTaskById(taskId) {\n    console.log('findTaskById called');\n    return taskLibrary.find(t => t.id === taskId)\n}\n\nfunction removeFromTaskLibrary(taskId) {\n    console.log('removeFromTaskLibrary called');\n    const taskIndex = taskLibrary.findIndex(t => t.id === taskId);\n    taskLibrary.splice(taskIndex, 1);\n    (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage)('taskLibrary', taskLibrary);\n}\n\nfunction Task(name, dueDate, priority) {\n    this.id = generateUniqueId();\n    this.name = name,\n    this.dueDate = dueDate,\n    this.priority = priority\n\n    this.addToTaskLibrary = function() {\n        console.log('addToTaskLibrary called');\n\n        taskLibrary.push(this);\n        (0,_localStorage__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage)('taskLibrary', taskLibrary);\n    }\n\n    this.complete = false;\n\n    this.markAsComplete = function() {\n        console.log('markAsComplete task called');\n        this.complete = true;\n    }\n\n    this.markAsIncomplete = function() {\n        console.log('markAsIncomplete task called');\n        this.complete = false;\n    }\n}\n\n//# sourceURL=webpack://getitdone_todo_list/./src/modules/tasks.js?");

/***/ }),

/***/ "./src/modules/userInterface.js":
/*!**************************************!*\
  !*** ./src/modules/userInterface.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assignHandler: () => (/* binding */ assignHandler),\n/* harmony export */   handleAddTaskToProject: () => (/* binding */ handleAddTaskToProject),\n/* harmony export */   handleCreateProject: () => (/* binding */ handleCreateProject),\n/* harmony export */   handleDeleteAllTasks: () => (/* binding */ handleDeleteAllTasks),\n/* harmony export */   handleDeleteProject: () => (/* binding */ handleDeleteProject),\n/* harmony export */   handleDeleteTask: () => (/* binding */ handleDeleteTask),\n/* harmony export */   handleProjectListItemClick: () => (/* binding */ handleProjectListItemClick)\n/* harmony export */ });\n/* harmony import */ var _domManipulation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domManipulation */ \"./src/modules/domManipulation.js\");\n/* harmony import */ var _projects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projects */ \"./src/modules/projects.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tasks */ \"./src/modules/tasks.js\");\n/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./localStorage */ \"./src/modules/localStorage.js\");\n\n\n\n\n\nfunction handleCreateProject() {\n    console.log('handleCreateProject called');\n    const projectName = document.getElementById('pname').value;\n    const projectDescription = document.getElementById('pdescription').value;\n    const projectDueDate = document.getElementById('pduedate').value;\n\n    const newProject = new _projects__WEBPACK_IMPORTED_MODULE_1__.Project(projectName, projectDescription, projectDueDate);\n    if (projectName === '') {\n        alert('Project Name cannot be blank');\n        return;\n    } \n\n    newProject.addToProjectLibrary();\n    (0,_domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderProjectDetails)(newProject);\n    (0,_domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderLayout)();\n}\n\nfunction handleDeleteProject() {\n    console.log('handleDeleteProject called');\n\n    const projectDetailsElement = document.querySelector('.project-details-name');\n    if (projectDetailsElement) {\n        const projectId = document.querySelector('.project-details-name').dataset.projectId;\n        const projectIndex = _projects__WEBPACK_IMPORTED_MODULE_1__.projectLibrary.findIndex(proj => proj.id === projectId);\n\n    const tasksToDelete = _projects__WEBPACK_IMPORTED_MODULE_1__.projectLibrary[projectIndex].tasks;\n    if (tasksToDelete.length > 0) {\n        tasksToDelete.forEach(task => {\n            const taskId = task.id;\n            (0,_tasks__WEBPACK_IMPORTED_MODULE_2__.removeFromTaskLibrary)(taskId);\n            (0,_localStorage__WEBPACK_IMPORTED_MODULE_3__.saveToLocalStorage)('taskLibrary', _tasks__WEBPACK_IMPORTED_MODULE_2__.taskLibrary);\n        });\n    }\n\n    (0,_projects__WEBPACK_IMPORTED_MODULE_1__.removeFromProjectLibrary)(projectId);\n    (0,_localStorage__WEBPACK_IMPORTED_MODULE_3__.saveToLocalStorage)('projectLibrary', _projects__WEBPACK_IMPORTED_MODULE_1__.projectLibrary);\n\n    // TO DO: decouple below section and add to renderProjectDetails function\n    const layout = document.getElementById('layout-section');\n    layout.textContent = '';\n\n    const noProjectDisplayDiv = document.createElement('div');\n    noProjectDisplayDiv.classList.add('no-project-display');\n    layout.appendChild(noProjectDisplayDiv);\n\n    const noProjectDisplay = document.createElement('h2');\n    noProjectDisplay.textContent = 'No Project Selected';\n    noProjectDisplayDiv.appendChild(noProjectDisplay);\n    \n    (0,_domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderLayout)();     \n    } else {\n        console.error('project Details element not found');\n    } \n}\n\nfunction handleAddTaskToProject() {\n    console.log('handleAddTaskToProject called');\n    const taskName = document.getElementById('tname').value;\n    const taskDueDate = document.getElementById('tduedate').value;\n    const taskPriority = document.getElementById('tpriority').value;\n\n    const newTask = new _tasks__WEBPACK_IMPORTED_MODULE_2__.Task(taskName, taskDueDate, taskPriority); \n    newTask.addToTaskLibrary();\n    \n    const projectId = document.querySelector('.project-details-name').dataset.projectId;\n    const project = _projects__WEBPACK_IMPORTED_MODULE_1__.projectLibrary.find(proj => proj.id === projectId);\n    project.tasks.push(newTask);\n\n    (0,_localStorage__WEBPACK_IMPORTED_MODULE_3__.saveToLocalStorage)('projectLibrary', _projects__WEBPACK_IMPORTED_MODULE_1__.projectLibrary);\n    (0,_domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderProjectDetails)(project);\n}\n\nfunction handleDeleteTask() {\n    console.log('handleDeleteTask called');\n\n\n}\n\nfunction handleDeleteAllTasks() {\n    console.log('handleDeleteAllTasks called');\n    // logic for deleting all tasks here\n}\n\nfunction handleProjectListItemClick(event) {\n    console.log('handleProjectListItemClick called');\n    //\n    const clickedElement = event.target.closest('.project-list-item');\n    const projectId = clickedElement.dataset.projectId;\n    const project = (0,_projects__WEBPACK_IMPORTED_MODULE_1__.findProjectById)(projectId);\n    (0,_domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderProjectDetails)(project);\n}\n\nfunction assignHandler() {\n    console.log('assingHandler called');\n\n    // STATIC BUTTONS\n    const allTasksButton = document.getElementById('all-tasks-button');\n    allTasksButton.addEventListener('click', _domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderAllTasks);\n\n    const createProjectButton = document.getElementById('create-project-button');\n    createProjectButton.addEventListener('click', _domManipulation__WEBPACK_IMPORTED_MODULE_0__.renderCreateProjectForm);\n\n    const projectList = document.getElementById('project-list');\n    projectList.addEventListener('click', handleProjectListItemClick);\n\n    // DYNAMICALLY BUTTONS \n    // PROJECT FORM\n    const projectForm = document.getElementById('create-project-form');\n    if (projectForm) {\n        const submitButton = document.getElementById('create-project-submit-button');\n        submitButton.addEventListener('click', handleCreateProject);\n        const cancelButton = document.getElementById('create-project-cancel-button');\n        cancelButton.addEventListener('click', () => {\n            const layoutSection = document.getElementById('layout-section');\n            layoutSection.removeChild(projectForm);\n        })\n    };\n\n    // TASK FORM\n    const taskForm = document.getElementById('create-task-form');\n    const taskSection = document.querySelector('.add-task-section');\n    const addTaskButton = document.getElementById('add-task-button');\n    if (taskForm) {\n        const submitButton = document.getElementById('create-task-submit-button');\n        submitButton.addEventListener('click', () => {\n            const taskName = document.getElementById('tname').value;\n            if (taskName !== '') {\n                handleAddTaskToProject();\n                taskSection.removeChild(taskForm);\n                addTaskButton.style.display = '';\n            } else {\n                alert('Task Name cannot be empty');\n                return;\n            }    \n        })\n        const cancelButton = document.getElementById('create-task-cancel-button');\n        cancelButton.addEventListener('click', () => {\n            taskSection.removeChild(taskForm);\n            addTaskButton.style.display = '';\n        })\n    };\n\n    // ALL TASKS DISPLAY\n    const allTasksSection = document.querySelector('.all-tasks-section');\n    if (allTasksSection) {\n        const allTasksDelete = document.querySelector('.all-tasks-delete');\n        allTasksDelete.addEventListener('click', () => {\n            handleDeleteAllTasks();\n        })\n    }\n\n    // PROJECT DELETE\n    const projectDetails = document.querySelector('.project-details-name');\n    if (projectDetails) {\n        const projectDelete = document.querySelector('.project-delete-button');\n        projectDelete.addEventListener('click', () => {\n            handleDeleteProject();\n        })\n    }\n\n    // TASK DELETE\n    const taskList = document.querySelector('.project-details-task-list');\n    if (taskList && taskList.children.length > 0) {\n        const deleteButtons = document.querySelectorAll('.project-details-task-item .task-item-delete');\n        deleteButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                const taskItem = button.closest('.project-details-task-item');\n                const taskId = taskItem.dataset.taskId;\n                console.log('Task ID:', taskId);\n            })\n        })\n    }\n\n\n\n\n    // TODO: DECOUPLE PROJECT DELTE FUNCTION WITH PROJECT DELETE BUTTON assignHandler\n    // const projectHeader = document.querySelector('.project-details-header');\n    // if (projectHeader) {\n    //     const projectDeleteButton = document.querySelector('.project-delete-button');\n    //     projectDeleteButton.addEventListener('click', () => {\n    //         const projectName = document.querySelector('.project-details-name').textContent;\n\n    //         const projectIndex = projectLibrary.findIndex(proj => proj.name === projectName);\n            \n    //         if (projectIndex !== -1) {\n    //             const tasksToDelete = projectLibrary[projectIndex].tasks;\n    //             tasksToDelete.forEach(task => {\n    //                 const taskIndex = taskLibrary.findIndex(t => t.id === task.id);\n\n    //                 if (taskIndex !== -1) {\n    //                     taskLibrary.splice(taskIndex, 1);\n    //                 }\n    //             });\n\n    //             projectLibrary.splice(projectIndex, 1);\n                \n    //             renderProjectListDisplay();\n    //             const layout = document.getElementById('layout-section');\n    //             layout.textContent = '';\n\n    //             const noProjectDisplayDiv = document.createElement('div');\n    //             noProjectDisplayDiv.classList.add('no-project-display');\n    //             layout.appendChild(noProjectDisplayDiv);\n\n    //             const noProjectDisplay = document.createElement('h2');\n    //             noProjectDisplay.textContent = 'No Project Selected';\n    //             noProjectDisplayDiv.appendChild(noProjectDisplay);\n    //         } else {\n    //             console.error('Project Not Found');\n    //         }\n\n    //         saveToLocalStorage('taskLibrary', taskLibrary);\n    //         saveToLocalStorage('projectLibrary', projectLibrary);\n    //     })\n    // }\n\n\n    const projectTaskListbelow = 0;\n\n\n    // PROJECT TASKS LIST\n    // const taskList = document.querySelector('.project-details-task-list');\n    // if (taskList) {\n    //     taskList.addEventListener('click', (event) => {\n    //         const deleteButton = event.target.closest('.task-item-delete');\n    //         if (deleteButton) {\n    //             const taskItem = deleteButton.closest('.project-details-task-item');   \n    //             const taskId = taskItem.dataset.taskId;\n    //             const task = taskLibrary.find(t => t.id === taskId);\n    //             const projectContainingTask = projectLibrary.find(proj => proj.tasks.some(t => t.id === taskId));\n    //             if (task && projectContainingTask) {\n    //                 const projectTaskIndex = projectContainingTask.tasks.findIndex(t => t.id === taskId);\n    //                 if (projectTaskIndex !== -1) {\n    //                     projectContainingTask.tasks.splice(projectTaskIndex, 1);\n    //                     const taskIndex = taskLibrary.indexOf(task);\n\n    //                     if (taskIndex !== -1) {\n    //                         console.log(task);\n    //                         // issue below probably because the task itself does not have access \n    //                         // to the methods from the task constructor it was created by\n    //                         //\n    //                         task.removeFromTaskLibrary();\n    //                         //\n    //                     }\n\n    //                     if (document.querySelector('.project-details-name')) {\n    //                         renderProjectDetails(projectContainingTask);\n    //                     } else {\n    //                         renderAllTasks();\n    //                     }\n    //                 }\n    //             } else {\n    //                 console.error('Task and/or Project not found');\n    //             }   \n    //         }\n    //         saveToLocalStorage('projectLibrary', projectLibrary);\n    //     });\n    // }\n\n\n\n}\n\n//# sourceURL=webpack://getitdone_todo_list/./src/modules/userInterface.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;